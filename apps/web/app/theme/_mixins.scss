// In this file mixins are defined that can be used in the theme
// to make it easier to create new styles.




// This mixin is used to create a new style for a button.

@mixin button($color, $background) {
  background-color: $background;
  border: 1px solid $color;
  color: $color;
  padding: 10px 20px;
  text-align: center;
  text-decoration: none;
  display: inline-block;
  font-size: 16px;
  margin: 4px 2px;
  cursor: pointer;
  border-radius: 8px;
}

// this example shows how to use the mixin
.button {
  @include button($color: #4CAF50, $background: white);
}

// This mixin allows you to write media queries easily by defining breakpoints and applying styles accordingly.

$breakpoints: (
  xs: 0,
  sm: 576px,
  md: 768px,
  lg: 992px,
  xl: 1200px
);

@mixin respond-to($breakpoint) {
  @if map-has-key($breakpoints, $breakpoint) {
    @media (min-width: map-get($breakpoints, $breakpoint)) {
      @content;
    }
  } @else {
    @warn "Breakpoint #{$breakpoint} does not exist in $breakpoints";
  }
}

// this example shows how to use the mixin

.container {
  width: 100%;
  @include respond-to(sm) {
    width: 540px;
  }
  @include respond-to(md) {
    width: 720px;
  }
  @include respond-to(lg) {
    width: 960px;
  }
  @include respond-to(xl) {
    width: 1140px;
  }
}

// This mixin allows to create easily layouts with flexbox.

@mixin flexbox($direction: row, $justify: flex-start, $align: stretch, $wrap: nowrap) {
  display: flex;
  flex-direction: $direction;
  justify-content: $justify;
  align-items: $align;
  flex-wrap: $wrap;
}

// this example shows how to use the mixin

.container {
  @include flexbox(row, space-between, center, wrap);
}

// This mixin allows you to create animatiosn easily.

@mixin animation($name, $duration, $delay, $function, $count, $direction, $fill) {
  animation-name: $name;
  animation-duration: $duration;
  animation-delay: $delay;
  animation-timing-function: $function;
  animation-iteration-count: $count;
  animation-direction: $direction;
  animation-fill-mode: $fill;
}

// this example shows how to use the mixin

.container {
  @include animation(name, 1s, 0s, ease, 1, normal, none);
}

// This mixin allows you to create shadows easily.

@mixin shadow($x, $y, $blur, $spread, $color) {
  box-shadow: $x $y $blur $spread $color;
}

// this example shows how to use the mixin

.container {
  @include shadow(0, 0, 10px, 0, rgba(0, 0, 0, 0.5));
}

// This mixin allows you to create gradients easily.

@mixin gradient($direction, $color1, $color2) {
  background: $color1;
  background: -moz-linear-gradient($direction, $color1 0%, $color2 100%);
  background: -webkit-linear-gradient($direction, $color1 0%, $color2 100%);
  background: linear-gradient($direction, $color1 0%, $color2 100%);
}

// this example shows how to use the mixin

.container {
  @include gradient(to bottom, #000000, #ffffff);
}

// This mixin allows you to create transitions easily.

@mixin transition($property, $duration, $function) {
  transition: $property $duration $function;
}

// this example shows how to use the mixin

.container {
  @include transition(all, 0.5s, ease);
}

// This mixin allows you to create transforms easily.

@mixin transform($property, $value) {
  transform: $property($value);
}

// this example shows how to use the mixin

.container {
  @include transform(rotate, 30deg);
}

// this mixin allows you to create more flexible flexbox layouts

@mixin flex($direction: row, $align: center, $justify: center) {
  display: flex;
  flex-direction: $direction;
  align-items: $align;
  justify-content: $justify;
}

// this example shows how to use the mixin

.container {
  @include flex(row, center, center);
}

// This mixin allows you to create more flexible flexbox column layouts
@mixin flex-column {
  @include flex(column);
}

// this example shows how to use the mixin

.container {
  @include flex-column;
}


@mixin flex-center {
  @include flex(row, center, center);
}

// this example shows how to use the mixin

.container {
  @include flex-center;
}


@mixin flex-center-column {
  @include flex(column, center, center);
}

@mixin flex-center-vert {
  @include flex(row, center, null);
}

@mixin flex-center-horiz {
  @include flex(null, center, center);
}


